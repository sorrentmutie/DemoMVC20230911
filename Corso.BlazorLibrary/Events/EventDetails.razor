<h3>Evento @selectedEvent?.Date</h3>
@if(selectedEvent != null)
{
<EditForm Model="selectedEvent" 
    OnValidSubmit="() => OnSave.InvokeAsync(selectedEvent)">

    <DataAnnotationsValidator/>

        <div class="form-group">
            <label for="Description"> Descrizione: </label>
            <InputText id="Description" class="form-control"
                @bind-Value="selectedEvent.Description">
            </InputText>
            <ValidationMessage For="@(() => selectedEvent.Description)"></ValidationMessage>
        </div>

        <div class="form-group">
            <label for="Location"> Località: </label>
            <InputText class="form-control" id="Location" @bind-Value="selectedEvent.Location">
            </InputText>
            <ValidationMessage For="@(() => selectedEvent.Location)"></ValidationMessage>
        </div>

        <div class="form-group">
            <label for="Date"> Data: </label>
            <InputDate id="Date" class="form-control" @bind-Value="selectedEvent.Date">
            </InputDate>
        </div>
    <button type="submit" class="btn btn-warning">Salva</button>
    <button type="button" @onclick="() => OnCancel.InvokeAsync()" class="btn btn-danger">Annulla</button>
</EditForm>
}



@code {
    [Parameter] public EventListElement? selectedEvent { get; set; } 
    [Parameter] public EventCallback<EventListElement> OnSave { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; } 
}
